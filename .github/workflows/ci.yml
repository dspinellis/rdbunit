name: rdbunit CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-python-versions:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Test
      run: tests/test-parts.sh

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Lint with pylint
      run: pipenv run pylint -r n src/rdbunit/__main__.py

    - name: Check style with pycodestyle
      run: pipenv run pycodestyle src/rdbunit/__main__.py

  test-databases:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install SQLite
        run: sudo apt-get install -y sqlite3

      - name: SQLite
        run: tests/test-sqlite.sh

      - name: PostgreSQL
        env:
          POSTGRES_USER: postgres
          PGPASSWORD: postgres
        run: tests/test-postgresql.sh

      - name: mySQL
        env:
          MYSQL_ROOT_PASSWORD: password
        run: tests/test-mysql.sh
